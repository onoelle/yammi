# Original Author was Kalle@kde.org
# I lifted it in some mater. (Stephan Kulow)
# I used much code from Janos Farkas

dnl Process this file with autoconf to produce a configure script.

AC_INIT(acinclude.m4) dnl a source file from your sub dir

dnl This is so we can use kde-common
AC_CONFIG_AUX_DIR(admin)

AC_CANONICAL_SYSTEM 

dnl Automake doc recommends to do this only here. (Janos)
AM_INIT_AUTOMAKE(yammi,0.7)

KDE_SET_PREFIX

AC_PREFIX_DEFAULT(/usr/local)
if test "x$prefix" = "xNONE"; then
  prefix=$ac_default_prefix
  ac_configure_args="$ac_configure_args --prefix $prefix"
fi

dnl generate the config header
AM_CONFIG_HEADER(config.h) dnl at the distribution this done

dnl Checks for programs.
AC_CHECK_COMPILERS

dnl CXXFLAGS="$NOOPT_CXXFLAGS" dnl __kdevelop[noopt]__
dnl CFLAGS="$NOOPT_CFLAGS" dnl __kdevelop[noopt]__
dnl CXXFLAGS="$CXXFLAGS $USE_EXCEPTIONS" dnl __kdevelop[exc]__


dnl -------------------------------
dnl Configure switches.
dnl -------------------------------
AC_ARG_ENABLE(ogglibs,
[  --disable-ogglibs           disable support of ogg libs for reading ogg tags], enable_ogglibs=no, enable_ogglibs=yes)
AC_ARG_ENABLE(id3lib,
[  --disable-id3lib           disable support of id3lib for reading id3 tags], enable_id3lib=no, enable_id3lib=yes)


dnl -------------------------------
dnl Checks for libraries.
dnl -------------------------------

dnl OGG vorbis libraries
if test "x$enable_ogglibs" = xyes; then
    dnl Libraries required for reading ogg tags, if not found 'enable_ogglibs' is disabled
    AC_CHECK_LIB(ogg, ogg_sync_init, , enable_ogglibs=no)
    AC_CHECK_LIB(vorbis, vorbis_comment_init, , enable_ogglibs=no)
    AC_CHECK_LIB(vorbisfile, ov_open, , enable_ogglibs=no)
fi

AC_MSG_CHECKING(for ogg libs for reading ogg tags)
if test "x$enable_ogglibs" = xyes; then
    AC_DEFINE(ENABLE_OGGLIBS)
    AC_MSG_RESULT(yes)
else
    echo "*** Warning: ogg libs support disabled => no reading/writing of tags in ogg files! ***"
    AC_MSG_RESULT(no)
fi


dnl id3lib library
AC_MSG_CHECKING(for id3lib support)
if test "x$enable_id3lib" = xyes; then
dnl    LIBS="-lid3lib $LIBS"
dnl    AC_CHECK_LIB(id3lib, , , enable_id3lib=no)
dnl
    AC_SEARCH_LIBS(ID3Tag_Link,"id3" "id3 -lstdc++" "id3 -lz" "id3 -lz -lstdc++",,AC_MSG_ERROR(id3lib not found))
dnl Needed to link correctly with id3lib 3.8.0
    LIBS="-lz -lstdc++ $LIBS"
    AC_DEFINE(ENABLE_ID3LIB)
    AC_MSG_RESULT(yes)
else
    echo "*** Warning: id3lib support disabled => no reading/writing of tags in mp3 files! ***"
    AC_MSG_RESULT(no)
fi


dnl ---------------------
dnl end of library checks
dnl ---------------------


AC_ENABLE_SHARED(yes)
AC_ENABLE_STATIC(no)
KDE_PROG_LIBTOOL

all_libraries="$all_libraries $USER_LDFLAGS"
all_includes="$all_includes $USER_INCLUDES"
AC_SUBST(all_includes)
AC_SUBST(all_libraries)

dnl for NLS support. Call them in this order!
dnl WITH_NLS is for the po files
AM_KDE_WITH_NLS

KDE_USE_QT(3)
AC_PATH_KDE

dnl KDE_NEED_FLEX dnl __kdevelop__
dnl AC_PROG_YACC dnl __kdevelop__

dnl Perform program name transformation
dnl AC_ARG_PROGRAM


dnl PACKAGE set before

KDE_CREATE_SUBDIRSLIST

dnl add here all your Makefiles. This are created by configure
AC_OUTPUT(Makefile yammi/Makefile yammi/docs/Makefile yammi/docs/en/Makefile yammi/mp3info/Makefile )


echo "
Configuration for $PACKAGE $VERSION :
--------------------------------

 Source code location .: $srcdir
 Host System Type .....: $host
 Preprocessor .........: $CC $CPPFLAGS
 Compiler .............: $CC $CFLAGS $LIBFLAC_CFLAGS
 Linker ...............: $CC $LDFLAGS $LIBS $LIBFLAC_LIBS
 ogg libs support .....: $enable_ogglibs
 id3lib support .......: $enable_id3lib
 Install path .........: $prefix

 Now type 'make' to build $PACKAGE $VERSION,
 and then 'make install' for installation.
"
