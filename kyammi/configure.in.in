#MIN_CONFIG(3.0.0)

AM_INIT_AUTOMAKE(yammi, 1.2-alpha-2)
AC_C_BIGENDIAN
AC_CHECK_KDEMAXPATHLEN

AH_TEMPLATE( [ENABLE_ID3LIB], [Support reading and writing MP3 tags] )
AH_TEMPLATE( [ENABLE_OGGLIBS], [Support reading and writing OGG tags] )
AH_TEMPLATE( [ENABLE_XMMS], [Support xmms as media player] )

dnl -------------------------------
dnl Configure switches.
dnl -------------------------------

AC_ARG_ENABLE( [xmms],
               AC_HELP_STRING( [--disable-xmms],
                               [disable support for xmms (don't need xmmsctrl)] ),
               configure_enable_xmms=$enableval,
               configure_enable_xmms=yes )

AC_ARG_ENABLE( [ogglibs],
             AC_HELP_STRING( [--disable-ogglibs],
                             [disable support of ogglibs for reading/writing ogg tags] ),
             configure_enable_ogglibs=$enableval,
             configure_enable_ogglibs=yes )

AC_ARG_ENABLE( [id3lib],
               AC_HELP_STRING( [--disable-id3lib],
                               [disable support of id3lib for reading id3 tags] ),
               configure_enable_id3lib=$enableval,
               configure_enable_id3lib=yes )

AC_MSG_NOTICE( [
 Requested:
 XMMS support .........: $configure_enable_xmms
 ogglibs support ......: $configure_enable_ogglibs
 id3lib support .......: $configure_enable_id3lib
] )


dnl -------------------------------
dnl Checks for libraries.
dnl -------------------------------

dnl standard C++ library
AC_CHECK_LIB( stdc++, main, , AC_MSG_ERROR( [*** stdc++ library is required ***] ), )

dnl OGG vorbis libraries
if test "x$configure_enable_ogglibs" = "xyes"; then
    dnl Libraries required for reading ogg tags,
    dnl if not found 'configure_enable_ogglibs' is disabled

    AC_CHECK_LIB(ogg, ogg_sync_init, , configure_enable_ogglibs=no, )
    if test "x$configure_enable_ogglibs" = "xyes"; then
        AC_CHECK_LIB( vorbis, vorbis_comment_init,, configure_enable_ogglibs=no, )
    fi

    if test "x$configure_enable_ogglibs" = "xyes"; then
        AC_CHECK_LIB( vorbisfile, ov_open,, configure_enable_ogglibs=no, )
    fi

    if test "x$configure_enable_ogglibs" = "xyes"; then
        AC_DEFINE( [ENABLE_OGGLIBS], [1] )
    fi
fi

dnl id3lib library
if test "x$configure_enable_id3lib" = "xyes"; then
    AC_CHECK_LIB( z, deflate,, configure_enable_id3lib=no, )

    dnl if still adding libid3 then...
    if test "x$configure_enable_id3lib" = "xyes"; then
        AC_CHECK_LIB( id3, ID3Tag_Link,, configure_enable_id3lib=no, )
    fi
fi

if test "x$configure_enable_id3lib" = "xyes"; then
    AC_MSG_NOTICE( [reading/writing of tags in MP3 files is supported] )
    AC_DEFINE( [ENABLE_ID3LIB], [1] )
else
    AC_MSG_WARN( [*** Warning: id3lib support disabled => no reading/writing of tags in mp3 files! ***] )
fi


dnl XMMS support (new version)
dnl AM_PATH_XMMS([MINIMUM-VERSION, [ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND]]])
if test "x$configure_enable_xmms" = "xyes"; then
    AM_PATH_XMMS(1.2.6, ,AC_MSG_ERROR([*** XMMS >= 1.2.6 not found - please install it or run configure script with --disable-xmms ***] ))
    LIBS="$XMMS_LIBS $LIBS"
    CFLAGS="$XMMS_CFLAGS $CFLAGS"
    AC_DEFINE( [ENABLE_XMMS], [1] )
fi


dnl ---------------------
dnl end of library checks
dnl ---------------------


AC_MSG_NOTICE( [
Configuration for $PACKAGE $VERSION :
--------------------------------
 ##############################################
 Source code location .: $srcdir
 Host System Type .....: $host
 Preprocessor .........: $CC $CPPFLAGS
 Compiler .............: $CC $CFLAGS $LIBFLAC_CFLAGS
 Linker ...............: $CC $LDFLAGS $LIBS $LIBFLAC_LIBS
 XMMS support .........: $configure_enable_xmms
 ogglibs support ......: $configure_enable_ogglibs
 id3lib support .......: $configure_enable_id3lib
 Install path .........: $prefix
   If this path does not exist or is not the desired install path,
   you should re-run configure, giving a suitable path with the --prefix option
   For example ./configure --prefix=/opt/kde3

 Look for any WARNINGs output by the configure script (run ./configure --help to see all options).
 If you're satisfied, type 'make' to build $PACKAGE $VERSION,
 and then 'make install' for installation.
] )
