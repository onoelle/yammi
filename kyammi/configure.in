dnl    This file is part of the KDE libraries/packages
dnl    Copyright (C) 2001 Stephan Kulow (coolo@kde.org)
 
dnl    This file is free software; you can redistribute it and/or
dnl    modify it under the terms of the GNU Library General Public
dnl    License as published by the Free Software Foundation; either
dnl    version 2 of the License, or (at your option) any later version.
 
dnl    This library is distributed in the hope that it will be useful,
dnl    but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
dnl    Library General Public License for more details.
 
dnl    You should have received a copy of the GNU Library General Public License
dnl    along with this library; see the file COPYING.LIB.  If not, write to
dnl    the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
dnl    Boston, MA 02111-1307, USA.

# Original Author was Kalle@kde.org
# I lifted it in some mater. (Stephan Kulow)
# I used much code from Janos Farkas

dnl Process this file with autoconf to produce a configure script.

AC_INIT(acinclude.m4) dnl a source file from your sub dir

dnl This is so we can use kde-common
AC_CONFIG_AUX_DIR(admin)

dnl This ksh/zsh feature conflicts with `cd blah ; pwd`
unset CDPATH

dnl Checking host/target/build systems, for make, install etc.
AC_CANONICAL_SYSTEM 
dnl Perform program name transformation
AC_ARG_PROGRAM

dnl Automake doc recommends to do this only here. (Janos)
AM_INIT_AUTOMAKE(yammi, 1.2-alpha) dnl searches for some needed programs

KDE_SET_PREFIX

dnl generate the config header
AM_CONFIG_HEADER(config.h) dnl at the distribution this done

dnl Checks for programs.
AC_CHECK_COMPILERS
AC_ENABLE_SHARED(yes)
AC_ENABLE_STATIC(no)
KDE_PROG_LIBTOOL

dnl for NLS support. Call them in this order!
dnl WITH_NLS is for the po files
AM_KDE_WITH_NLS

KDE_USE_QT(3.0.0)
AC_PATH_KDE
#MIN_CONFIG(3.0.0)

dnl PACKAGE set before
AC_C_BIGENDIAN
AC_CHECK_KDEMAXPATHLEN

AH_TEMPLATE( [ENABLE_ID3LIB], [Support reading and writing MP3 tags] )
AH_TEMPLATE( [ENABLE_OGGLIBS], [Support reading and writing OGG tags] )
AH_TEMPLATE( [ENABLE_XMMS], [Support xmms as media player] )

dnl -------------------------------
dnl Configure switches.
dnl -------------------------------

AC_ARG_ENABLE( [xmms],
               AC_HELP_STRING( [--disable-xmms],
                               [disable support for xmms (don't need xmmsctrl)] ),
               configure_enable_xmms=$enableval,
               configure_enable_xmms=yes )

AC_ARG_ENABLE( [ogglibs],
             AC_HELP_STRING( [--disable-ogglibs],
                             [disable support of ogglibs for reading/writing ogg tags] ),
             configure_enable_ogglibs=$enableval,
             configure_enable_ogglibs=yes )

AC_ARG_ENABLE( [id3lib],
               AC_HELP_STRING( [--disable-id3lib],
                               [disable support of id3lib for reading id3 tags] ),
               configure_enable_id3lib=$enableval,
               configure_enable_id3lib=yes )

AC_MSG_NOTICE( [
 Requested:
 XMMS support .........: $configure_enable_xmms
 ogglibs support ......: $configure_enable_ogglibs
 id3lib support .......: $configure_enable_id3lib
] )


dnl -------------------------------
dnl Checks for libraries.
dnl -------------------------------

dnl standard C++ library
AC_CHECK_LIB( stdc++, main, , AC_MSG_ERROR( [*** stdc++ library is required ***] ), )

dnl OGG vorbis libraries
if test "x$configure_enable_ogglibs" = "xyes"; then
    dnl Libraries required for reading ogg tags,
    dnl if not found 'configure_enable_ogglibs' is disabled

    AC_CHECK_LIB(ogg, ogg_sync_init, , configure_enable_ogglibs=no, )
    if test "x$configure_enable_ogglibs" = "xyes"; then
        AC_CHECK_LIB( vorbis, vorbis_comment_init,, configure_enable_ogglibs=no, )
    fi

    if test "x$configure_enable_ogglibs" = "xyes"; then
        AC_CHECK_LIB( vorbisfile, ov_open,, configure_enable_ogglibs=no, )
    fi

    if test "x$configure_enable_ogglibs" = "xyes"; then
        AC_DEFINE( [ENABLE_OGGLIBS], [1] )
    fi
fi

dnl id3lib library
if test "x$configure_enable_id3lib" = "xyes"; then
    AC_CHECK_LIB( z, deflate,, configure_enable_id3lib=no, )

    dnl if still adding libid3 then...
    if test "x$configure_enable_id3lib" = "xyes"; then
        AC_CHECK_LIB( id3, ID3Tag_Link,, configure_enable_id3lib=no, )
    fi
fi

if test "x$configure_enable_id3lib" = "xyes"; then
    AC_MSG_NOTICE( [reading/writing of tags in MP3 files is supported] )
    AC_DEFINE( [ENABLE_ID3LIB], [1] )
else
    AC_MSG_WARN( [*** Warning: id3lib support disabled => no reading/writing of tags in mp3 files! ***] )
fi


dnl XMMS support (new version)
dnl AM_PATH_XMMS([MINIMUM-VERSION, [ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND]]])
if test "x$configure_enable_xmms" = "xyes"; then
    AM_PATH_XMMS(1.2.6, ,AC_MSG_ERROR([*** XMMS >= 1.2.6 not found - please install it or run configure script with --disable-xmms ***] ))
    LIBS="$XMMS_LIBS $LIBS"
    CFLAGS="$XMMS_CFLAGS $CFLAGS"
    AC_DEFINE( [ENABLE_XMMS], [1] )
fi


dnl ---------------------
dnl end of library checks
dnl ---------------------


AC_MSG_NOTICE( [
Configuration for $PACKAGE $VERSION :
--------------------------------
 ##############################################
 Source code location .: $srcdir
 Host System Type .....: $host
 Preprocessor .........: $CC $CPPFLAGS
 Compiler .............: $CC $CFLAGS $LIBFLAC_CFLAGS
 Linker ...............: $CC $LDFLAGS $LIBS $LIBFLAC_LIBS
 XMMS support .........: $configure_enable_xmms
 ogglibs support ......: $configure_enable_ogglibs
 id3lib support .......: $configure_enable_id3lib
 Install path .........: $prefix
   If this path does not exist or is not the desired install path,
   you should re-run configure, giving a suitable path with the --prefix option
   For example ./configure --prefix=/opt/kde3

 Look for any WARNINGs output by the configure script (run ./configure --help to see all options).
 If you're satisfied, type 'make' to build $PACKAGE $VERSION,
 and then 'make install' for installation.
] )
KDE_CREATE_SUBDIRSLIST
AC_CONFIG_FILES([ Makefile ])
AC_CONFIG_FILES([ doc/Makefile ])
AC_CONFIG_FILES([ doc/en/Makefile ])
AC_CONFIG_FILES([ po/Makefile ])
AC_CONFIG_FILES([ src/Makefile ])
AC_CONFIG_FILES([ src/icons/Makefile ])
AC_OUTPUT
if test "$all_tests" = "bad"; then
  if test ! "$cache_file" = "/dev/null"; then
    echo ""    
    echo "Please remove the file $cache_file after changing your setup"
    echo "so that configure will find the changes next time."
    echo ""
  fi
else
  echo ""
  echo "Good - your configure finished. Start make now"
  echo ""
fi
