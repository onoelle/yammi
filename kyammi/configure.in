dnl    This file is part of the KDE libraries/packages
dnl    Copyright (C) 2001 Stephan Kulow (coolo@kde.org)
 
dnl    This file is free software; you can redistribute it and/or
dnl    modify it under the terms of the GNU Library General Public
dnl    License as published by the Free Software Foundation; either
dnl    version 2 of the License, or (at your option) any later version.
 
dnl    This library is distributed in the hope that it will be useful,
dnl    but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
dnl    Library General Public License for more details.
 
dnl    You should have received a copy of the GNU Library General Public License
dnl    along with this library; see the file COPYING.LIB.  If not, write to
dnl    the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
dnl    Boston, MA 02111-1307, USA.

# Original Author was Kalle@kde.org
# I lifted it in some mater. (Stephan Kulow)
# I used much code from Janos Farkas

dnl Process this file with autoconf to produce a configure script.

AC_INIT(acinclude.m4) dnl a source file from your sub dir

dnl This is so we can use kde-common
AC_CONFIG_AUX_DIR(admin)

dnl This ksh/zsh feature conflicts with `cd blah ; pwd`
unset CDPATH

dnl Checking host/target/build systems, for make, install etc.
AC_CANONICAL_SYSTEM 
dnl Perform program name transformation
AC_ARG_PROGRAM

dnl Automake doc recommends to do this only here. (Janos)
AM_INIT_AUTOMAKE(yammi, 1.2-rc2) dnl searches for some needed programs

KDE_SET_PREFIX

dnl generate the config header
AM_CONFIG_HEADER(config.h) dnl at the distribution this done

dnl Checks for programs.
AC_CHECK_COMPILERS
AC_ENABLE_SHARED(yes)
AC_ENABLE_STATIC(no)
KDE_PROG_LIBTOOL

dnl for NLS support. Call them in this order!
dnl WITH_NLS is for the po files
AM_KDE_WITH_NLS

KDE_USE_QT(3.0.0)
AC_PATH_KDE
#MIN_CONFIG(3.0.0)

dnl PACKAGE set before
AC_C_BIGENDIAN
AC_CHECK_KDEMAXPATHLEN

dnl -------------------------------
dnl Configure switches.
dnl -------------------------------

AH_TEMPLATE( [ENABLE_XMMS], [Support xmms as media player] )
AH_TEMPLATE( [ENABLE_GSTREAMER], [Support gstreamer as media player] )

AC_ARG_ENABLE( [xmms],
               AC_HELP_STRING( [--disable-xmms],
                               [disable support for xmms (don't need xmmsctrl)] ),
               configure_enable_xmms=$enableval,
               configure_enable_xmms=yes )

AC_ARG_ENABLE( [gstreamer],
	       AC_HELP_STRING( [--disable-gstreamer],
			       [disable support for gstreamer] ),
	       configure_enable_gstreamer=$enableval,
	       configure_enable_gstreamer=yes )


AC_MSG_NOTICE( [
 Requested:
 XMMS support .........: $configure_enable_xmms
 gstreamer support ....: $configure_enable_gstreamer
] )


dnl -------------------------------
dnl Checks for libraries.
dnl -------------------------------

dnl standard C++ library
AC_CHECK_LIB( stdc++, main, , AC_MSG_ERROR( [*** stdc++ library is required ***] ), )


dnl taglib check
dnl ------------

TAGLIB_REQ_VERSION="1.3";
AC_DEFUN([VERSION_TO_NUMBER], [`$1 | awk 'BEGIN { FS = "."; } { printf "%d",  ([$]1* 1000 + [$]2) * 1000 + [$]3;}'`])

AC_PATH_PROG(TAGLIB_CONFIG, taglib-config, no)

if test "x$TAGLIB_CONFIG" = "xno" ; then
    AC_MSG_ERROR( [*** taglib not found! ***] )
else
    AC_DEFINE(HAVE_TAGLIB, 1, [have TagLib])
    taglib_includes=[`$TAGLIB_CONFIG --cflags`]
    taglib_libs=[`$TAGLIB_CONFIG --libs`]
    taglib_version=[`$TAGLIB_CONFIG --version`]

    if test VERSION_TO_NUMBER(echo $taglib_version) -lt VERSION_TO_NUMBER(echo $TAGLIB_REQ_VERSION); then
        AC_MSG_ERROR( [*** taglib too old! ***] )
    fi
fi

AC_SUBST(taglib_includes)
AC_SUBST(taglib_libs)
LIBS="$taglib_libs $LIBS"
CFLAGS="$taglib_includes $CFLAGS"



dnl XMMS support (new version)
dnl --------------------------
if test "x$configure_enable_xmms" = "xyes"; then
    AM_PATH_XMMS(1.2.6, ,AC_MSG_ERROR([*** XMMS >= 1.2.6 not found - please install it or run configure script with --disable-xmms ***] ))
    LIBS="$XMMS_LIBS $LIBS"
    CFLAGS="$XMMS_CFLAGS $CFLAGS"
    AC_DEFINE( [ENABLE_XMMS], [1] )
fi



dnl GStreamer support
dnl -----------------
if test "x$configure_enable_gstreamer" = "xyes"; then
   KDE_CHECK_HEADER(kde/gstplay/play.h,configure_enable_gstreamer=yes,configure_enable_gstreamer=no)

   if test "x$configure_enable_gstreamer" = "xyes"; then
      AC_DEFINE( [ENABLE_GSTREAMER], [] )
      LIBS="$LIBS -lkdegst -lkdegstplay"
   fi 
fi

dnl ---------------------
dnl end of library checks
dnl ---------------------


AC_MSG_NOTICE( [
Configuration for $PACKAGE $VERSION :
--------------------------------
 ##############################################
 Source code location .: $srcdir
 Host System Type .....: $host
 Preprocessor .........: $CC $CPPFLAGS
 Compiler .............: $CC $CFLAGS $LIBFLAC_CFLAGS
 Linker ...............: $CC $LDFLAGS $LIBS $LIBFLAC_LIBS
 XMMS support .........: $configure_enable_xmms
 gstreamer support ....: $configure_enable_gstreamer
 Install path .........: $prefix
   If this path does not exist or is not the desired install path,
   you should re-run configure, giving a suitable path with the --prefix option
   For example ./configure --prefix=/opt/kde3

 Look for any WARNINGs output by the configure script (run ./configure --help to see all options).
 If you're satisfied, type 'make' to build $PACKAGE $VERSION,
 and then 'make install' for installation.
] )
KDE_CREATE_SUBDIRSLIST
AC_CONFIG_FILES([ Makefile ])
AC_CONFIG_FILES([ doc/Makefile ])
AC_CONFIG_FILES([ doc/en/Makefile ])
AC_CONFIG_FILES([ po/Makefile ])
AC_CONFIG_FILES([ src/Makefile ])
AC_CONFIG_FILES([ src/icons/Makefile ])
AC_OUTPUT
if test "$all_tests" = "bad"; then
  if test ! "$cache_file" = "/dev/null"; then
    echo ""    
    echo "Please remove the file $cache_file after changing your setup"
    echo "so that configure will find the changes next time."
    echo ""
  fi
else
  echo ""
  echo "Good - your configure finished. Start make now"
  echo ""
fi
